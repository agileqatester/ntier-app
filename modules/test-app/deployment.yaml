apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${name_prefix}-test-sa
  %{ if irsa_role_arn != "" }
  annotations:
    eks.amazonaws.com/role-arn: ${irsa_role_arn}
  %{ endif }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${name_prefix}-test
  labels:
    app: ${name_prefix}-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${name_prefix}-test
  template:
    metadata:
      labels:
        app: ${name_prefix}-test
    spec:
      serviceAccountName: ${name_prefix}-test-sa
      containers:
      - name: web
        image: python:3.11-slim
        command: ["/bin/sh","-c","pip install flask boto3 psycopg2-binary && python /app/app.py"]
        ports:
        - containerPort: 8080
        env:
        - name: DB_ENABLED
          value: "${db_enabled}"
        %{ if db_enabled == "true" }
        - name: DB_SECRET_NAME
          value: "${db_secret_name}"
        - name: DB_HOST
          value: "${db_host}"
        - name: DB_NAME
          value: "${db_name}"
        - name: AWS_REGION
          value: "${region}"
        %{ endif }
        volumeMounts:
        - name: appcode
          mountPath: /app
      volumes:
      - name: appcode
        configMap:
          name: ${name_prefix}-test-config

---
apiVersion: v1
kind: Service
metadata:
  name: ${name_prefix}-test-svc
spec:
  type: LoadBalancer
  selector:
    app: ${name_prefix}-test
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
